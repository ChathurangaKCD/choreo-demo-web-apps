server {
    listen 8080;

    # Serve all files under the /usr/share/nginx/html directory
    root /usr/share/nginx/html;

    # Main location block
    location / {
        # 1. Try to serve the requested file directly
        # 2. If it's a directory, try to serve the index.html within it without redirecting
        # 3. Try to serve the corresponding .html file if the requested URI is not a file or directory
        # 4. If the path ends with a trailing slash but isn't a directory, go to the named location
        # 5. Finally, serve the root index.html as a fallback
        try_files $uri $uri/index.html $uri.html @handle_trailing_slash /index.html;

        index index.html index.htm;
    }

    # Named location to handle trailing slashes and serve appropriate .html or index.html files
    location @handle_trailing_slash {
        # Remove the trailing slash to serve the cleaned URI or an index.html file if it exists
        set $clean_uri $uri;
        if ($clean_uri ~* ^(.+)/$) {
            set $clean_uri $1;
        }

        # Try to serve the cleaned URI as an .html file or as a directory containing index.html
        try_files $clean_uri.html $clean_uri/index.html =404;
    }

    # Optional: Serve static files correctly (JS, CSS, Images, etc.)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|ttf|eot|svg)$ {
        try_files $uri =404;
    }

    # Custom error page for 404 errors
    error_page 404 /error_404.html;

    # Block for serving the custom 404 page
    location = /error_404.html {
        internal; # This prevents the error page from being accessed directly by the client
    }
}
